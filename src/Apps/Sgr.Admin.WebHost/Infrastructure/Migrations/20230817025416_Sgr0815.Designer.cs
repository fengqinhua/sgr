// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sgr.EntityFrameworkCore;

#nullable disable

namespace Sgr.Admin.WebHost.Infrastructure.Migrations
{
    [DbContext(typeof(SgrDbContext))]
    [Migration("20230817025416_Sgr0815")]
    partial class Sgr0815
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Sgr.AuditLogAggregate.LogLogin", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_id")
                        .HasComment("主键");

                    b.Property<string>("ClientBrowser")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("m_clientbrowser")
                        .HasComment("客户端浏览器");

                    b.Property<string>("ClientOs")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("m_clientos")
                        .HasComment("客户端系统");

                    b.Property<DateTimeOffset>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("sgr_creationtime")
                        .HasComment("创建时间");

                    b.Property<long>("CreatorUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_creatoruserid")
                        .HasComment("创建的用户ID");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("m_ipaddress")
                        .HasComment("登录Ip地址");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_location")
                        .HasComment("登录地点");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_loginname")
                        .HasComment("登录账号");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("m_loginprovider");

                    b.Property<DateTimeOffset>("LoginTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("m_logintime")
                        .HasComment("登录时间");

                    b.Property<string>("LoginWay")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("m_loginway")
                        .HasComment("登录途径");

                    b.Property<long>("OrgId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_orgid")
                        .HasComment("所在组织ID");

                    b.Property<string>("ProviderDisplayName")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("m_providerdisplayname");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("m_providerkey");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_remark")
                        .HasComment("登录描述");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("m_status")
                        .HasComment("登录状态");

                    b.Property<string>("UserName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_username")
                        .HasComment("用户姓名");

                    b.HasKey("Id");

                    b.HasIndex("OrgId");

                    b.ToTable("sgr_loglogin", (string)null);
                });

            modelBuilder.Entity("Sgr.AuditLogAggregate.LogOperate", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_id")
                        .HasComment("主键");

                    b.Property<string>("ClientBrowser")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("m_clientbrowser")
                        .HasComment("客户端浏览器");

                    b.Property<string>("ClientOs")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("m_clientos")
                        .HasComment("客户端系统");

                    b.Property<DateTimeOffset>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("sgr_creationtime")
                        .HasComment("创建时间");

                    b.Property<long>("CreatorUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_creatoruserid")
                        .HasComment("创建的用户ID");

                    b.Property<string>("HttpMethod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("m_httpmethod")
                        .HasComment("请求方法");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("m_ipaddress")
                        .HasComment("登录Ip地址");

                    b.Property<string>("Location")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("m_location")
                        .HasComment("登录地点");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_loginname")
                        .HasComment("登录账号");

                    b.Property<string>("OperateWay")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("m_operateway")
                        .HasComment("登录途径");

                    b.Property<long>("OrgId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_orgid")
                        .HasComment("所在组织ID");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("m_remark")
                        .HasComment("请求结果描述");

                    b.Property<string>("RequestDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("m_requestdescription")
                        .HasComment("请求说明");

                    b.Property<long?>("RequestDuration")
                        .HasColumnType("bigint")
                        .HasColumnName("m_requestduration")
                        .HasComment("请求耗时");

                    b.Property<string>("RequestParam")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("m_requestparam")
                        .HasComment("请求参数");

                    b.Property<DateTimeOffset>("RequestTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("m_requesttime")
                        .HasComment("请求时间");

                    b.Property<string>("RequestUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("m_requesturl")
                        .HasComment("请求地址");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("m_status")
                        .HasComment("请求结果");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_username")
                        .HasComment("用户姓名");

                    b.HasKey("Id");

                    b.HasIndex("OrgId");

                    b.ToTable("sgr_logoperate", (string)null);
                });

            modelBuilder.Entity("Sgr.DataDictionaryAggregate.DataCategoryItem", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_id")
                        .HasComment("主键");

                    b.Property<string>("CategoryTypeCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_categorytypecode")
                        .HasComment("字典分类标识");

                    b.Property<DateTimeOffset>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("sgr_creationtime")
                        .HasComment("创建时间");

                    b.Property<long>("CreatorUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_creatoruserid")
                        .HasComment("创建的用户ID");

                    b.Property<string>("DcItemName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_dcitemname")
                        .HasComment("字典项名称");

                    b.Property<string>("DcItemValue")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_dcitemvalue")
                        .HasComment("字典项值");

                    b.Property<bool>("IsEditable")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("m_iseditable")
                        .HasComment("是否可编辑");

                    b.Property<DateTimeOffset?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("sgr_lastmodificationtime")
                        .HasComment("修改时间");

                    b.Property<long>("LastModifierUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_lastmodifieruserid")
                        .HasComment("修改的用户ID");

                    b.Property<string>("NodePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sgr_nodepath")
                        .HasComment("树节点层次目录");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int")
                        .HasColumnName("m_ordernumber")
                        .HasComment("排序号");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_parentid")
                        .HasComment("上级节点Id");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_remarks")
                        .HasComment("备注");

                    b.Property<long>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_rowversion")
                        .HasComment("行版本");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("m_state")
                        .HasComment("组织机构状态");

                    b.HasKey("Id");

                    b.HasIndex("CategoryTypeCode");

                    b.HasIndex("NodePath");

                    b.HasIndex("ParentId");

                    b.ToTable("sgr_datacategoryitem", (string)null);
                });

            modelBuilder.Entity("Sgr.DepartmentAggregate.Department", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_id")
                        .HasComment("主键");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_code")
                        .HasComment("部门编码");

                    b.Property<DateTimeOffset>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("sgr_creationtime")
                        .HasComment("创建时间");

                    b.Property<long>("CreatorUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_creatoruserid")
                        .HasComment("创建的用户ID");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("m_email")
                        .HasComment("联系邮箱");

                    b.Property<DateTimeOffset?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("sgr_lastmodificationtime")
                        .HasComment("修改时间");

                    b.Property<long>("LastModifierUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_lastmodifieruserid")
                        .HasComment("修改的用户ID");

                    b.Property<string>("Leader")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("m_leader")
                        .HasComment("负责人");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_name")
                        .HasComment("部门名称");

                    b.Property<string>("NodePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sgr_nodepath")
                        .HasComment("树节点层次目录");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int")
                        .HasColumnName("m_ordernumber")
                        .HasComment("组织排序号");

                    b.Property<long>("OrgId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_orgid")
                        .HasComment("所在组织ID");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_parentid")
                        .HasComment("上级节点Id");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("m_phone")
                        .HasComment("联系电话");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("m_remarks")
                        .HasComment("描述");

                    b.Property<long>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_rowversion")
                        .HasComment("行版本");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("m_state")
                        .HasComment("部门状态");

                    b.HasKey("Id");

                    b.HasIndex("NodePath");

                    b.HasIndex("OrgId");

                    b.HasIndex("ParentId");

                    b.ToTable("sgr_department", (string)null);
                });

            modelBuilder.Entity("Sgr.DutyAggregate.Duty", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_id")
                        .HasComment("主键");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_code")
                        .HasComment("职务编码");

                    b.Property<DateTimeOffset>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("sgr_creationtime")
                        .HasComment("创建时间");

                    b.Property<long>("CreatorUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_creatoruserid")
                        .HasComment("创建的用户ID");

                    b.Property<DateTimeOffset?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("sgr_lastmodificationtime")
                        .HasComment("修改时间");

                    b.Property<long>("LastModifierUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_lastmodifieruserid")
                        .HasComment("修改的用户ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_name")
                        .HasComment("职务名称");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int")
                        .HasColumnName("m_ordernumber")
                        .HasComment("排序号");

                    b.Property<long>("OrgId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_orgid")
                        .HasComment("所在组织ID");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("m_remarks")
                        .HasComment("职务备注");

                    b.Property<long>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_rowversion")
                        .HasComment("行版本");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("m_state")
                        .HasComment("职务状态");

                    b.HasKey("Id");

                    b.HasIndex("OrgId");

                    b.ToTable("sgr_duty", (string)null);
                });

            modelBuilder.Entity("Sgr.OrganizationAggregate.Organization", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_id")
                        .HasComment("主键");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_address")
                        .HasComment("所在地址");

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("m_areacode")
                        .HasComment("所属行政区划编码");

                    b.Property<string>("BusinessLicensePath")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_businesslicensepath")
                        .HasComment("营业执照路径");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_code")
                        .HasComment("组织机构编码");

                    b.Property<DateTimeOffset>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("sgr_creationtime")
                        .HasComment("创建时间");

                    b.Property<long>("CreatorUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_creatoruserid")
                        .HasComment("创建的用户ID");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("m_email")
                        .HasComment("联系邮箱");

                    b.Property<string>("ExtensionData")
                        .HasMaxLength(2047)
                        .HasColumnType("varchar(2047)")
                        .HasColumnName("sgr_extensiondata")
                        .HasComment("扩展对象/实体");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("m_isconfirmed")
                        .HasComment("是否已完成认证");

                    b.Property<DateTimeOffset?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("sgr_lastmodificationtime")
                        .HasComment("修改时间");

                    b.Property<long>("LastModifierUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_lastmodifieruserid")
                        .HasComment("修改的用户ID");

                    b.Property<string>("Leader")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("m_leader")
                        .HasComment("机构负责人");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_logourl")
                        .HasComment("Logo地址");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_name")
                        .HasComment("组织机构名称");

                    b.Property<string>("NodePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sgr_nodepath")
                        .HasComment("树节点层次目录");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int")
                        .HasColumnName("m_ordernumber")
                        .HasComment("组织机构排序号");

                    b.Property<string>("OrgTypeCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("m_orgtypecode")
                        .HasComment("组织机构类型编码");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_parentid")
                        .HasComment("上级节点Id");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("m_phone")
                        .HasComment("联系电话");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("m_remarks")
                        .HasComment("描述");

                    b.Property<long>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_rowversion")
                        .HasComment("行版本");

                    b.Property<string>("StaffSizeCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("m_staffsizecode")
                        .HasComment("人员规模编码");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("m_state")
                        .HasComment("组织机构状态");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("NodePath");

                    b.HasIndex("ParentId");

                    b.ToTable("sgr_organization", (string)null);
                });

            modelBuilder.Entity("Sgr.RoleAggregate.Role", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_id")
                        .HasComment("主键");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_code")
                        .HasComment("角色编码");

                    b.Property<DateTimeOffset>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("sgr_creationtime")
                        .HasComment("创建时间");

                    b.Property<long>("CreatorUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_creatoruserid")
                        .HasComment("创建的用户ID");

                    b.Property<DateTimeOffset?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("sgr_lastmodificationtime")
                        .HasComment("修改时间");

                    b.Property<long>("LastModifierUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_lastmodifieruserid")
                        .HasComment("修改的用户ID");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int")
                        .HasColumnName("m_ordernumber")
                        .HasComment("排序号");

                    b.Property<long>("OrgId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_orgid")
                        .HasComment("所在组织ID");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("m_remarks")
                        .HasComment("备注");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_rolename")
                        .HasComment("角色名称");

                    b.Property<long>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_rowversion")
                        .HasComment("行版本");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("m_state")
                        .HasComment("状态");

                    b.HasKey("Id");

                    b.HasIndex("OrgId");

                    b.ToTable("sgr_role", (string)null);
                });

            modelBuilder.Entity("Sgr.RoleAggregate.RoleResource", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sgr_id")
                        .HasComment("主键");

                    b.Property<string>("ResourceCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_resourcecode")
                        .HasComment("资源标识");

                    b.Property<int>("ResourceType")
                        .HasColumnType("int")
                        .HasColumnName("m_resourcetype")
                        .HasComment("资源类型");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("m_roleid")
                        .HasComment("角色标识");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("sgr_role_resource", (string)null);
                });

            modelBuilder.Entity("Sgr.UserAggregate.User", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_id")
                        .HasComment("主键");

                    b.Property<DateTimeOffset>("CreationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("sgr_creationtime")
                        .HasComment("创建时间");

                    b.Property<long>("CreatorUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_creatoruserid")
                        .HasComment("创建的用户ID");

                    b.Property<long?>("DepartmentId")
                        .HasColumnType("bigint")
                        .HasColumnName("m_departmentid")
                        .HasComment("所属部门Id");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_departmentname")
                        .HasComment("所属部门名称");

                    b.Property<DateTimeOffset?>("FirstLoginTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("m_firstlogintime")
                        .HasComment("首次登录时间");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("m_issuperadmin");

                    b.Property<DateTimeOffset?>("LastLoginTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("m_lastlogintime")
                        .HasComment("最近一次登录时间");

                    b.Property<DateTimeOffset?>("LastModificationTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("sgr_lastmodificationtime")
                        .HasComment("修改时间");

                    b.Property<long>("LastModifierUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_lastmodifieruserid")
                        .HasComment("修改的用户ID");

                    b.Property<int>("LoginFailCount")
                        .HasColumnType("int")
                        .HasColumnName("m_loginfailcount")
                        .HasComment("登录失败次数");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_loginname")
                        .HasComment("登录名称");

                    b.Property<string>("LoginPassword")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("m_loginpassword")
                        .HasComment("登录密码");

                    b.Property<int>("LoginSuccessCount")
                        .HasColumnType("int")
                        .HasColumnName("m_loginsuccesscount")
                        .HasComment("登录成功次数");

                    b.Property<long>("OrgId")
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_orgid")
                        .HasComment("所在组织ID");

                    b.Property<string>("QQ")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("m_qq")
                        .HasComment("用户QQ号码");

                    b.Property<long>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint")
                        .HasColumnName("sgr_rowversion")
                        .HasComment("行版本");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("m_state")
                        .HasComment("状态");

                    b.Property<string>("UserEmail")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("m_useremail")
                        .HasComment("用户邮箱地址");

                    b.Property<string>("UserName")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("m_username")
                        .HasComment("用户姓名");

                    b.Property<string>("UserPhone")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("m_userphone")
                        .HasComment("用户绑定的手机号码");

                    b.Property<string>("Wechat")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("m_wechat")
                        .HasComment("用户微信号码");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("LoginName");

                    b.HasIndex("OrgId");

                    b.ToTable("sgr_user", (string)null);
                });

            modelBuilder.Entity("Sgr.UserAggregate.UserDuty", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sgr_id")
                        .HasComment("主键");

                    b.Property<long>("DutyId")
                        .HasColumnType("bigint")
                        .HasColumnName("m_dutyid")
                        .HasComment("岗位标识");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("m_userid")
                        .HasComment("用户标识");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("sgr_user_duty", (string)null);
                });

            modelBuilder.Entity("Sgr.UserAggregate.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sgr_id")
                        .HasComment("主键");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("m_roleid")
                        .HasComment("角色标识");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("m_userid")
                        .HasComment("用户标识");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("sgr_user_role", (string)null);
                });

            modelBuilder.Entity("Sgr.RoleAggregate.RoleResource", b =>
                {
                    b.HasOne("Sgr.RoleAggregate.Role", null)
                        .WithMany("Resources")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sgr.UserAggregate.UserDuty", b =>
                {
                    b.HasOne("Sgr.UserAggregate.User", null)
                        .WithMany("Duties")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sgr.UserAggregate.UserRole", b =>
                {
                    b.HasOne("Sgr.UserAggregate.User", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sgr.RoleAggregate.Role", b =>
                {
                    b.Navigation("Resources");
                });

            modelBuilder.Entity("Sgr.UserAggregate.User", b =>
                {
                    b.Navigation("Duties");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
